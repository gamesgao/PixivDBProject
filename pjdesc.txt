如何使用session，这是官方网站
https://www.npmjs.com/package/express-session

这里我采用的session存储方式就是mysql，session的配置在app.js中，需要按照需要修改。采用插件express-mysql-session。

说明：url是累加的注意！@xxx表示请求方式。
说明：return 页面请使用ejs渲染。
说明：return消息请使用json传递一个{}object。
注意：
	不管哪个路由，没有登陆都直接转到一个错误页面
	所有页面都要登陆才能访问，除了登陆和注册
总共x 个页面
/register目录下
/@get
	Param 无
return页面register.ejs
		注意需要用户未登录才能访问
	Ejs 无
/reg@post 注：为了防止看不懂，这里的url就是/register/reg
	Param 用户名：username
		   密码：password
		   邮箱：alipay_address
	Return 状态：status： 1：成功/0：失败
			错误信息：err
	注意：密码请加密存储。
			用户名注意查重。

/homepage目录下
/@get?userID = 123
	Param userID
	Return 页面 homepage.ejs
		注意这个是用户的个人主页，任何登陆的人都可以访问。
	Ejs 个人信息：pdata={项目名称：值} //项太多了先不管 //这里打算直接用p站那样一个列表www
		投稿作品：contribute_painting[{
			url: //图片地址
			illustID: // 图片ID
		},...] //这里虽然传几个都可以，但是只传三个就好。
		用户名称：username
		关注的人：following[{
			header: // 头像地址
			userID: //用户ID
		},...] // 只传三个
		关注的人数：following_num
		

		收藏的画：colloect_painting[{
			url: //图片地址
			illustID: // 图片ID
		},...]// 只传三个
		Tag：tag [], 字符串
		用户头像：user_header：url
		用户ID：userID
		共 7 项

		下面三个暂且不要
		// 粉丝？不存在的
		// 朋友：friend{
			header: //头像地址
			name: //好友名字
			id: //好友id
		}
		// 朋友人数：friendNum
		
/config@get
	Param 无
	Return 页面 config.ejs
		这是用户个人设置页面，按照session来显示
	Ejs 用户名称：username
		用户头像：user_header：url
		支付宝账号：alipay：
		个人信息：user_info={项目名称：值}
		用户ID：userID

/config/upload@post
	Param newname(新的用户名), newAlipay, 以后还要加用户的详细信息
	Return 状态：status： 1：成功/0：失败
			错误信息：err
		用于为登陆用户添加关注，将userID添加给登陆用户	

/following@get？userID
	Param userID
	Return 页面 following.ejs
		用于显示用户的关注用户

在这里实现删除功能
	Ejs 用户名称：username
		用户头像：user_header：url
用户ID：userID
关注的人：following 头像+名称+id，需要详细讨论。
		关注的人数：following_num
	

/addfollowing@get?userID 注：这边的userID是被关注的人的ID
	Param userID
	Return 状态：status： 1：成功/0：失败
			错误信息：err
		用于为登陆用户添加关注，将userID添加给登陆用户

/delfollowing@get?userID
	Param userID
	Return 状态：status： 1：成功/0：失败
			错误信息：err
		用于为登陆用户删除关注，将userID删除给登陆用户

/addcollect@get?paintingID
	Param paintingID
	Return 状态：status： 1：成功/0：失败
			错误信息：err
		用于为登陆用户增加收藏的画，将paintingID添加给用户		

/delcollect@get?paintingID
	Param paintingID
	Return 状态：status： 1：成功/0：失败
			错误信息：err
		用于为登陆用户删除收藏的画，将paintingID删除给登陆用户		

	

朋友/收藏的画/投稿作品同理，请你补全

用户设置的修改，分开还是统一修改？（按照数据库的写法来）统一或者分开都需要实现post接口，请你补全 ： 见config 和 configupload
用户设置上传，访问

/illust页面下
/@get？illustID
	Param illustID
	Return 页面 illust.ejs
		用户画的展示页面
	Ejs 用户名称：username
		用户头像：user_header：url
		用户ID：userID
		画链接：url
		画名称：painting_name
		画tag：tag#可能需要加一个能不能删除的flag 
		时间：time
		分辨率：resolution
		赞数：ratedCount
		浏览数：viewCount
		
/delTag@post
	Param paintingID, tag
	Return 状态：status： 1：成功/0：失败
			错误信息：err
		用于删除tag

/addTag@post
	param paintingID, tag
	Return 状态：status： 1：成功/0：失败
			错误信息：err
		用于添加tag

/trade页面下
/@get
	Param 无 # 利用这里的参数可以用来做排序和搜索

	Return页面 trade.ejs
		招标系统的主页面

	Ejs 
		用户名称：username
		用户头像：user_header：url
		用户ID：userID
		是否可以招标：tradeflag
		招标项目：
		{
			buyer:发起人,
			price:价格,
			ddl:deadline,
			state:状态
		}

/initTrade@get
	Param

	Return页面 initTrade.ejs
		用于发起招标

	Ejs 用户名称：username
		用户头像：user_header：url
		用户ID：userID

/initTrade@post
	Param 
			发起人 : buyer
			发起时间 : start_time
			简介：abstract
			价格：price
			Tag：tags
			Ddl：deadline
			状态：state
			**以上这些简称brief trade**
	Return页面 {status : 1成功0失败}
	
/getTrade@get？tradeID
	Param tradeID
	Return 页面 getTrade.ejs
		1.用于显示一个招标的详细信息和用于接受（画师）
		2.这个页面对于买家同时用于接受候选人
		3.画师也可以在这个页面取消接单
		
/getTrade/selectpainter@get 
	Param: painterID, tradeID
	Return 是否成功，同之前

/getTrade/applyfortrade@get
	Param: painterID, tradeID
	Return 是否成功，同之前

/homepage@get
	Param: userID,即这个主页是关于谁的
	Return 
		tradeHomepage.ejs
		交易:trades
			如果是画家，则返回他已接单的trade，trade以brief trade的形式给出
			如果是买家，则返回他所发出的trade，同上


这个页面可能还要同时做取消？
	Ejs 简介：abstract
			价格：price
			Tag：tag
			Ddl：deadline
		ID：tradeID
		创建时间：time
		状态：status
		招标候选人：需要详细讨论

/search页面下
/user@get
	Param 无
	Return 页面 searchUser.ejs
		用于搜索用户
	Ejs 无？

/user@post
	Param tag
			Name等？
	Return 状态：status： 1：成功/0：失败
			错误信息：err
			结果：result
	
画搜索类似，其实可以两个合并？加的flag就可以，当然分开也行

/upload页面下
/header/@post
	Param 头像图片
	更换登录用户头像
	Return 状态：status： 1：成功/0：失败
			错误信息：err

/addcontribute/@post
	Param 用户作品
	需要对权限有所判断
